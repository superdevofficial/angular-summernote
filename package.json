{
  "_args": [
    [
      {
        "raw": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
        "spec": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
        "type": "remote"
      },
      "/Users/admin/Documents/Superdev/nisha"
    ]
  ],
  "_from": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
  "_id": "angular-summernote@0.8.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/angular-summernote",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
    "spec": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
    "type": "remote"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
  "_shasum": "8bc7d479666aedf51ba6a290284d300e08e07d34",
  "_shrinkwrap": null,
  "_spec": "https://github.com/superdevofficial/angular-summernote/tarball/patch-1",
  "_where": "/Users/admin/Documents/Superdev/nisha",
  "author": {
    "name": "\"Outsider\" Jeonghoon Byun",
    "email": "outsideris@gmail.com",
    "url": "http://blog.outsider.ne.kr/"
  },
  "bugs": {
    "url": "https://github.com/outsideris/involved/issues"
  },
  "dependencies": {},
  "description": "AngularJS directive to Summernote",
  "devDependencies": {
    "del": "^2.1.0",
    "gulp": "^3.9.0",
    "gulp-coveralls": "^0.1.4",
    "gulp-header": "^1.7.1",
    "gulp-jshint": "^1.11.2",
    "gulp-nuget-pack": "0.0.6",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^1.4.2",
    "jshint-stylish": "^2.0.1",
    "karma": "~0.13.9",
    "karma-chrome-launcher": "~0.2.0",
    "karma-coffee-preprocessor": "~0.3.0",
    "karma-coverage": "^0.5.0",
    "karma-firefox-launcher": "~0.1.3",
    "karma-html2js-preprocessor": "~0.1.0",
    "karma-mocha": "~0.2.0",
    "karma-phantomjs-launcher": "~0.2.0",
    "karma-requirejs": "~0.2.1",
    "karma-script-launcher": "~0.1.0",
    "mocha": "~2.2.0",
    "requirejs": "~2.1.10"
  },
  "homepage": "https://github.com/summernote/angular-summernote",
  "keywords": [
    "editor",
    "bootstrap",
    "WYSIWYG",
    "angular",
    "angular.js"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://outsider.mit-license.org/"
    }
  ],
  "main": "dist/angular-summernote.js",
  "name": "angular-summernote",
  "optionalDependencies": {},
  "readme": "# angular-summernote - [AngularJS](http://angularjs.org/) directive to [Summernote](http://summernote.org/)\n\n***\n\n[![Build Status](https://travis-ci.org/summernote/angular-summernote.png?branch=master)](https://travis-ci.org/summernote/angular-summernote)\n[![Dependency Status](https://gemnasium.com/summernote/angular-summernote.png)](https://gemnasium.com/summernote/angular-summernote)\n[![Coverage Status](https://coveralls.io/repos/summernote/angular-summernote/badge.png)](https://coveralls.io/r/summernote/angular-summernote)\n\nangular-summernote is just a directive to bind summmernote's all features.\nYou can use summernote with angular way.\n\n**Since v0.7.x, the version of angular-summernote follows the version of summernote.\nSo, angular-summernote v0.7.x are compatible with summernote v0.7.x and\nand angular-summernote v0.8.x will be compatible with summernote v0.8.x.\nAngular-summernote will match only `major.minor` with summernote.\nTherefore, angular-summernote v0.7.0 will be compatible with summernote v0.7.0, v0.7.1 and\nv0.7.2. Angular-summernote will release patch update, such as v0.7.1, if only angular-summernote has changed.**\n\n## Table of Contents\n\n- [Demo](#demo)\n- [Installation](#Installation)\n- [How To Use](#how-to-use)\n    - [summernote directive](summernote-directive)\n    - [Options](#options)\n    - [ngModel](#ngmodel)\n    - [Event Listeners](#event-listeners)\n    - [i18n Support](#i18n-support)\n- [FAQ](#faq)\n- [Change Logs](#change-logs)\n\n## Demo\n\nSee at [JSFiddle](http://jsfiddle.net/outsider/n8dt4/322/embedded/result%2Chtml%2Cjs%2Ccss/)\nor run example in projects(need to run `bower install` before run)\n\n## Installation\n\nangular-summernote requires all include files of [Summernote](http://summernote.org/).\nsee [Summernote's installation](http://summernote.org/#/features#installation).\n\nProject files are also available through your favourite package manager:\n\n* Bower: `bower install angular-summernote`\n\n## How To Use\n\nWhen you are done downloading all the dependencies and project files the only remaining part is to add dependencies on the ui.bootstrap AngularJS module:\n\nWhen you've inclued all js and css files you need to inject `a` into your angular application:\n\n```javascript\nangular.module('myApp', ['summernote']);\n```\n\n### `summernote` Directive\n\nYou can use `summernote` directive where you want to use summernote editor.\nAnd when the scope is destroyed the directive will be destroyed.\n\n#### As element:\n\n```html\n<summernote></summernote>\n```\n#### As attribute:\n\n```html\n<div summernote></div>\n```\n\nIt will be initialized automatically.\n\nIf you put markups in the directive, the markups used as initial text.\n\n```html\n<summernote><span style=\"font-weight: bold;\">This is initial text.</span></summernote>\n```\n\n### Options\n\nsummernote's options can be specified as attributes.\n\n#### height\n\n```html\n<summernote height=\"300\"></summernote>\n```\n\n#### focus\n\n```html\n<summernote focus></summernote>\n```\n\n#### airmode\n```html\n<summernote airMode></summernote>\n```\n\nIf you use the `removeMedia` button in popover, like below:\n\n```\n<summernote airMode config=\"options\" on-media-delete=\"mediaDelete(target)\"></summernote>\n```\n\n```\nfunction DemoController($scope) {\n  $scope.options = {\n    popover: {\n      image: [['remove', ['removeMedia']] ],\n      air: [['insert', ['picture']]]\n    }\n  };\n  $scope.mediaDelete = function(target) {\n    console.log('media is delted:', target);\n  }\n}\n```\n\nYou can use the 'onMediaDelete` callback. The `target` object has information of the DOM that is removed like:\n\n```\n{\n  tagName: \"IMG\",\n  attrs: {\n    data-filename: \"image-name.jpg\",\n    src: \"http://path/to/image\",\n    style: \"width: 100px;\"\n  }\n}\n```\n\n#### options object\n\nYou can specify all options using ngModel in `config` attribute.\n\n```html\n<summernote config=\"options\"></summernote>\n```\n\n```javascript\nfunction DemoController($scope) {\n  $scope.options = {\n    height: 300,\n    focus: true,\n    airMode: true,\n    toolbar: [\n            ['edit',['undo','redo']],\n            ['headline', ['style']],\n            ['style', ['bold', 'italic', 'underline', 'superscript', 'subscript', 'strikethrough', 'clear']],\n            ['fontface', ['fontname']],\n            ['textsize', ['fontsize']],\n            ['fontclr', ['color']],\n            ['alignment', ['ul', 'ol', 'paragraph', 'lineheight']],\n            ['height', ['height']],\n            ['table', ['table']],\n            ['insert', ['link','picture','video','hr']],\n            ['view', ['fullscreen', 'codeview']],\n            ['help', ['help']]\n        ]\n  };\n}\n```\n\nNOTE: `height` and `focus` attributes have high priority than options object.\n\nNOTE: custom toolbar can be set by options object.\n\n### ngModel\n\nsummernote's `code`, that is HTML string in summernote.\nIf you specify ngModel it will be 2-ways binding\nto HTML string in summernote. Otherwise `angular-summernote` simply ignore it.\n\n```html\n<summernote ng-model=\"text\"></summernote>\n```\n\n```javascript\nfunction DemoController($scope) {\n  $scope.text = \"Hello World\";\n}\n```\n\nAnd you can use [ngModelOptions](https://docs.angularjs.org/api/ng/directive/ngModelOptions)\nwith Angular v1.3+. So, you can update ngModel when blur event emitted or with a debouncing delay\nif you want.\n\n### Event Listeners\n\nevent listeners can be registered as attribute as you want.\n\n```javascript\nfunction DemoController($scope) {\n  $scope.init = function() { console.log('Summernote is launched'); }\n  $scope.enter = function() { console.log('Enter/Return key pressed'); }\n  $scope.focus = function(e) { console.log('Editable area is focused'); }\n  $scope.blur = function(e) { console.log('Editable area loses focus'); }\n  $scope.paste = function(e) { console.log('Called event paste'); }\n  $scope.change = function(contents) {\n    console.log('contents are changed:', contents, $scope.editable);\n  };\n  $scope.keyup = function(e) { console.log('Key is released:', e.keyCode); }\n  $scope.keydown = function(e) { console.log('Key is pressed:', e.keyCode); }\n  $scope.imageUpload = function(files) {\n    console.log('image upload:', files);\n    console.log('image upload\\'s editable:', $scope.editable);\n  }\n}\n```\n\n```html\n<summernote on-init=\"init()\" on-enter=\"enter()\" on-focus=\"focus(evt)\"\n            on-blur=\"blur(evt)\" on-paste=\"paste()\" on-keyup=\"keyup(evt)\"\n            on-keydown=\"keydown(evt)\" on-change=\"change(contents)\"\n            on-image-upload=\"imageUpload(files)\" editable=\"editable\" editor=\"editor\">\n</summernote>\n```\n\nIf you use `$editable` object in `onImageUpload` or `onChange`\n(see [summernote's callback](http://summernote.org/#/features#callbacks)),\nyou should define `editable` attribute and use it in `$scope`.\n(Because [AngularJS 1.3.x restricts access to DOM nodes from within expressions](https://docs.angularjs.org/error/$parse/isecdom))\n\nSince summernote v0.6.4, APIs have been changed. So, If you use the verions,\n`onImageUpload` is not return `editor` object anymore. If you want to user\n`editor` object, you should define `editor` attribute and use it in `$scope`.\nFuthermore, you can use summernote's APIs via the `editor` object.\n\n### i18n Support\n\nIf you use i18n, you have to include language files.\nSee [summernote's document](http://summernote.org/#/features#i18n)\nfor more details.\nAnd then you can specify language like:\n\n```html\n<summernote lang=\"ko-KR\"></summernote>\n```\n\n## FAQ\n\n- __How to solve compatibility problem with AngularUI Bootstrap?__\n\n[AngularUI Bootstrap](http://angular-ui.github.io/bootstrap/) module is\nwritten to replace the JavaScript file for bootstrap with its own\nimplementation (`ui-bootstrap-tpls.min.js`).\n\nSummernote was intended to work with Bootstrap, so the coder implemented\nfeatures that rely on the `bootstrap.js` file being present.\n\n* If you do not include `bootstrap.js`, summernote throws exceptions.\n* If you do not include `ui-bootstrap-tpls.min.js`, your angular directives\n  for bootstrap will not work.\n* If you include both, then both JavaScript files try to listen on various\n  events, and otherwise may have incompatibility issues.\n\nIf you have a drop down in the navbar, and use `data-dropdown` directive\nas bootstrap says to, then two clicks are required to open\nthe drop down (menu) instead of the expected one click.\n\nThe solution is to not use `data-dropdown` directive. However, the\nreal solution is for summernote to be agnostic about which of\n`bootstrap.js` or `ui-bootstrap-tpls.min.js` are loaded and make the right calls.\n(see [#21](https://github.com/summernote/angular-summernote/issues/21))\n\n## Change Logs\n\nSee [here](https://github.com/summernote/angular-summernote/blob/master/CHANGELOG.md).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/outsideris/involved.git"
  },
  "version": "0.8.1"
}
